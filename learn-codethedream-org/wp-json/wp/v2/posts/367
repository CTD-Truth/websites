{"id":367,"date":"2020-06-23T13:29:19","date_gmt":"2020-06-23T17:29:19","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?p=367"},"modified":"2020-06-24T17:12:08","modified_gmt":"2020-06-24T21:12:08","slug":"web-basics-ii-week-1-assignment","status":"publish","type":"post","link":"https:\/\/learn.codethedream.org\/web-basics-ii-week-1-assignment\/","title":{"rendered":"Web Basics II Week 1 Assignment"},"content":{"rendered":"\n<h2>Challenge 1: Create a variable and print the value<\/h2>\n\n\n\n<p>Create a variable and assign it any value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const hello = 'hello world'<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out your variable:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(hello)<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>const hello = 'hello world'\n\nconsole.log(hello)<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>'hello world'<\/code><\/pre>\n\n\n\n<h2>Challenge 2: Create variables for your first and last name then print your full name<\/h2>\n\n\n\n<p>Create a variable called <code>firstName<\/code> and assign your first name as the string value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const firstName = 'Elizabeth'<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>lastName<\/code> and assign your last name as the string value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const lastName = 'Thompson'<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out your full name:<\/p>\n\n\n\n<p>Method 1: String Concatenation<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(firstName + ' ' + lastName)<\/code><\/pre>\n\n\n\n<p>OR<\/p>\n\n\n\n<p>Method 2: Template Literals<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(`${firstName} ${lastName}`)<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Template_literals\">Template Literals<\/a><\/p><\/blockquote>\n\n\n\n<h2>Final code:<\/h2>\n\n\n\n<pre class=\"wp-block-code\"><code>const firstName = 'Elizabeth'\nconst lastName = 'Thompson'\n\nconsole.log(`${firstName} ${lastName}`)<\/code><\/pre>\n\n\n\n<h2>Output:<\/h2>\n\n\n\n<pre class=\"wp-block-code\"><code>'Elizabeth Thompson'<\/code><\/pre>\n\n\n\n<h2>Challenge 3: Calculate the total price rounded to two decimals<\/h2>\n\n\n\n<p>Create a variable called <code>price<\/code> and assign a float value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const price = 9.98<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>quantity<\/code> and assign an integer value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const quantity = 5<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>total<\/code> and assign the value of <code>price<\/code> multiplied by <code>quantity<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const total = price * quantity<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out the <code>total<\/code> (rounded to the nearest two decimals):<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const totalRounded = total.toFixed(2)\nconsole.log(`$${totalRounded}`)<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/Number\/toFixed\">toFixed() method<\/a><\/p><\/blockquote>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>const price = 9.98\nconst quantity = 5\nconst total = price * quantity\nconst totalRounded = total.toFixed(2)\n\nconsole.log(`$${totalRounded}`)<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>'$49.90'<\/code><\/pre>\n\n\n\n<h2>Challenge 4: Declare a variable and conditionally assign it a value<\/h2>\n\n\n\n<p>Create a variable called <code>weather<\/code> and assign &#8220;Rainy&#8221; as the string value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const weather = 'Rainy'<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/const\">const statement<\/a><\/p><\/blockquote>\n\n\n\n<p>Declare a variable called <code>message<\/code> and don&#8217;t assign it a value:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>let message<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/let\">let statement<\/a><\/p><\/blockquote>\n\n\n\n<p>Create a conditional statement that checks if <code>weather<\/code> is equal to &#8220;Sunny&#8221;:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>if (weather === 'Sunny') {\n\n}<\/code><\/pre>\n\n\n\n<p>If <code>weather<\/code> meets the condition above, then set <code>message<\/code> equal to &#8220;Yay! It&#8217;s sunny outside&#8221;:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>if (weather === 'Sunny') {\n  message = \"Yay! It's sunny outside\"\n}<\/code><\/pre>\n\n\n\n<p>Add an <code>else<\/code> clause that sets <code>message<\/code> equal to &#8220;Aww! It&#8217;s not sunny outside&#8221;:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>if (weather === 'Sunny') {\n  message = \"Yay! It's sunny outside\"\n} else {\n  message = \"Aww! It's not sunny outside\"\n}<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out the value of <code>message<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(message)<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>const weather = 'Rainy'\nlet message\n\nif (weather === 'Sunny') {\n  message = \"Yay! It's sunny outside\"\n} else {\n  message = \"Aww! It's not sunny outside\"\n}\n\nconsole.log(message)<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>\"Yay! It's sunny outside\"<\/code><\/pre>\n\n\n\n<h2>Challenge 5: Create a function that returns any string<\/h2>\n\n\n\n<p>Create a function called <code>myFunction<\/code> using the function keyword:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>function myFunction() {\n\n}<\/code><\/pre>\n\n\n\n<p>Add a return statement in your function which returns a random string:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>function myFunction() {\n  return 'I called a function!'\n}<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out the output of <code>myFunction()<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(myFunction())<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>function myFunction() {\n  return 'I called a function!'\n}\n\nconsole.log(myFunction())<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>'I called a function!'<\/code><\/pre>\n\n\n\n<h2>Challenge 6: Rewrite the function in Challenge #5 as an arrow function<\/h2>\n\n\n\n<p>Create a function called <code>myArrowFunction<\/code> using the arrow syntax:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const myArrowFunction = () => {\n\n}<\/code><\/pre>\n\n\n\n<p>Add a return statement in your function which returns a random string:<\/p>\n\n\n\n<p>Method 1: Explicit Return<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const myArrowFunction = () => {\n  return 'I called an arrow function!'\n}<\/code><\/pre>\n\n\n\n<p>OR<\/p>\n\n\n\n<p>Method 2: Implicit Return<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const myArrowFunction = () => 'I called an arrow function!'<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about <a href=\"https:\/\/medium.com\/@bunlong\/arrow-functions-return-rules-in-javascript-b63ed5f25994\">arrow function return rules<\/a><\/p><\/blockquote>\n\n\n\n<p>Use <code>console.log<\/code> to print out the output of <code>myArrowFunction()<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(myArrowFunction())<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>const myArrowFunction = () => 'I called an arrow function!'\n\nconsole.log(myArrowFunction())<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>'I called an arrow function!'<\/code><\/pre>\n\n\n\n<h2>Challenge 7: Create a function returns a string in all uppercase<\/h2>\n\n\n\n<p>Create a function called <code>stringToUpper<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const stringToUpper = () => {}<\/code><\/pre>\n\n\n\n<p>Add a parameter called <code>str<\/code> in your function signature:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const stringToUpper = (str) => {}<\/code><\/pre>\n\n\n\n<p>Add a return statement in your function which returns the input string in all uppercase letters:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const stringToUpper = (str) => str.toUpperCase()<\/code><\/pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Read more about the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/String\/toUpperCase\">toUpperCase() method<\/a><\/p><\/blockquote>\n\n\n\n<p>Use <code>console.log<\/code> to print out the output of <code>stringToUpper(str)<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(stringToUpper('why am i screaming'))<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>const stringToUpper = (str) => str.toUpperCase()\n\nconsole.log(stringToUpper('why am i screaming'))<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>'WHY AM I SCREAMING'<\/code><\/pre>\n\n\n\n<h2>Challenge 8: Create a function that accepts a number argument and returns double its value<\/h2>\n\n\n\n<p>Create a function called <code>multiplyByTwo<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>function multiplyByTwo() {\n\n}<\/code><\/pre>\n\n\n\n<p>Add a parameter called <code>number<\/code> in your function signature:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>function multiplyByTwo(number) {\n\n}<\/code><\/pre>\n\n\n\n<p>Add a return statement in your function which returns <code>number<\/code> times two:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>function multiplyByTwo(number) {\n  return number * 2\n}<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>num1<\/code> and assign it to the result of <code>multiplyByTwo(1)<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const num1 = multiplyByTwo(1)<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>num2<\/code> and assign it to the result of <code>multiplyByTwo(5)<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const num2 = multiplyByTwo(5)<\/code><\/pre>\n\n\n\n<p>Create a variable called <code>num3<\/code> and assign it to the result of <code>multiplyByTwo(10)<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const num3 = multiplyByTwo(10)<\/code><\/pre>\n\n\n\n<p>Use <code>console.log<\/code> to print out the value of <code>num1<\/code>, <code>num2<\/code>, and <code>num3<\/code>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>console.log(num1, num2, num3)<\/code><\/pre>\n\n\n\n<h3>Final code:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>function multiplyByTwo(number) {\n  return number * 2\n}\n\nconst num1 = multiplyByTwo(1)\nconst num2 = multiplyByTwo(5)\nconst num3 = multiplyByTwo(10)\n\nconsole.log(num1, num2, num3)<\/code><\/pre>\n\n\n\n<h3>Output:<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code>2, 10, 20<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Challenge 1: Create a variable and print the value Create a variable and assign it any value: Use console.log to print out your variable: Final code: Output: Challenge 2: Create variables for your first and last name then print your full name Create a variable called firstName and assign your first name as the string<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"categories":[1],"tags":[],"featured_image_src":null,"featured_image_src_square":null,"author_info":{"display_name":"Reid Russom","author_link":"https:\/\/learn.codethedream.org\/author\/reid\/"},"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/posts\/367"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=367"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/posts\/367\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=367"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/categories?post=367"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/tags?post=367"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}