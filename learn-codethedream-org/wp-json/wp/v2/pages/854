{"id":854,"date":"2021-02-11T14:57:58","date_gmt":"2021-02-11T19:57:58","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=854"},"modified":"2021-03-19T14:57:52","modified_gmt":"2021-03-19T18:57:52","slug":"git-and-github-starter","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/git-and-github-starter\/","title":{"rendered":"Git and Github Starter Cookbook"},"content":{"rendered":"\n<p>This page describes a few git commands.  You will need to do these commands to submit weekly assignments and to complete the Ruby on Rails Back End course.  If you are unfamiliar with git, you should complete the <a rel=\"noreferrer noopener\" href=\"https:\/\/teamtreehouse.com\/library\/introduction-to-git\" target=\"_blank\">Introduction to Git<\/a> course on Treehouse.  Unfortunately, that class does not explain branching, forking, and other operations that you will have to do.  These are explained in the courses on <a rel=\"noreferrer noopener\" href=\"https:\/\/teamtreehouse.com\/library\/git-branches-and-merging\" target=\"_blank\">Git Branches and Merging<\/a> and <a rel=\"noreferrer noopener\" href=\"https:\/\/teamtreehouse.com\/library\/github-basics\" target=\"_blank\">Github Basics<\/a> , but these are long courses, more than you need to know now. So, here&#8217;s a cookbook.<\/p>\n\n\n\n<p>First, if you don&#8217;t have a github account, create one at <a rel=\"noreferrer noopener\" href=\"https:\/\/github.com\" target=\"_blank\">https:\/\/github.com<\/a> .  If you use a Mac or Linux, you should have git already installed on your workstation.  You can check this by typing<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git --version<\/code><\/pre>\n\n\n\n<p>at your command line.  <br><br>If you are using Windows, we provide a vagrant virtual machine image for you to run, and git is already installed in that virtual machine image, as described in the lesson <a rel=\"noreferrer noopener\" href=\"https:\/\/learn.codethedream.org\/configuring-your-machine-for-ruby-rails-development\/\" target=\"_blank\">here.<\/a>  Be sure that you do all git operations from within the vagrant session, and not from Git Bash.  For Windows, you need to do some additional one time setup, by doing the following commands in your vagrant session:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git config --global user.email &lt;your email address&gt;\ngit config --global user.name &lt;your github id&gt;\ngit config --global core.eol lf\ngit config --global core.autocrlf input<\/code><\/pre>\n\n\n\n<p>For each lesson, you will have a starter github repository.  Fork that repository, creating a public fork of it in your own github account.  You do this by clicking on the fork button that appears on the upper right in the github page for the starter repository.<\/p>\n\n\n\n<p>After the fork is created, you need to clone it onto your workstation.  The github page for your fork has a green code download button.  Click on that.  You will use https to clone your fork.  You will see a clipboard icon next to the https link so that you can copy the URL of your fork.  Then, within the directory where you are keeping the code you develop, type:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone &lt;url&gt;<\/code><\/pre>\n\n\n\n<p>where the url is the one you copied to the clipboard.  This will copy the github repository into a directory.  The directory will have the same name as the starter repository.  Be sure you clone your fork, and not the starter repository.  Then, cd to the directory created by the cloning process.  You now need to create a branch of the repository to contain the changes you make for the lesson.  This is done as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git checkout -b lesson<\/code><\/pre>\n\n\n\n<p>Some lessons have you create branches with other names.  Next, you make your changes to the code that was downloaded using your editor.  When your changes are complete, the following steps will stage, commit, and push those changes, so that they are stored in your github repository:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git status\ngit add -A\ngit commit -m \"put a useful commit message here\"\ngit push origin lesson<\/code><\/pre>\n\n\n\n<p>except that for some lessons, the name of the branch will be something other than lesson, as described in the instructions for that lesson.  You can stage, commit, and push your changes at any time.  The git status command will tell you if you have uncommitted or unstaged changes.  The push operation requires that you enter your git userid and password.  <\/p>\n\n\n\n<p>When you are done with the lesson and want it reviewed, you create a pull request.  This is done when you are logged into github.  You open up the repository containing your fork of the lesson.  You will see a little button that says &#8220;master&#8221;.  This is your master branch.  If you click on that button, you will see that you can switch to your lesson branch.  Do so.  Then click on &#8220;pull request&#8221;.  You will see a button that allows you to choose the base repository.  You want the to specify your own repository, not the Code-The-Dream-School one.  You are creating the pull request with, as the base, the master branch of your own forked repository.  Click on the button that says &#8220;Create Pull Request&#8221;.<br><br>This is enough to get you started with git.  There are additional courses on Treehouse to help you learn git completely.  If you get stuck with any of these steps, put a question into the slack channel.<\/p>\n\n\n\n<h2><strong>Video Tutorial for Assignment Submission<\/strong><\/h2>\n\n\n\n<p>(Prepared for the Ruby on Rails class March 2021)<\/p>\n\n\n\n<p>John McGarvey takes us through the assignment submission process. <\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"How to submit CTD Assignments via Github &amp; Squibby- by John McGarvey 3\/19\/21\" width=\"500\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/mGwVNoeeVoE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2><strong>Steps for Submitting Assignments via GitHub<\/strong><\/h2>\n\n\n\n<ol><li>Fork the lesson workspace (in github).<\/li><li>Git clone my fork (from the terminal command line).<\/li><li>Create a git branch for the lesson.<\/li><li>Edit a file within the lesson.<\/li><li>Test my changes.<\/li><li>Git stage the file.<\/li><li>Git commit the file.<\/li><li>Git push the branch back to my fork.<\/li><li>Create a pull request, from my branch to the original repository.<\/li><li>Submit a link to my pull request using Squibby.<\/li><\/ol>\n\n\n\n<h2><strong>Using Squibby<\/strong> <strong>for the final step of assignment submission<\/strong><\/h2>\n\n\n\n<p>As of March 2021, we are using the custom-built Slackbot <strong>Squibby <\/strong>to notify CTD staff that your assignments are ready for review. <\/p>\n\n\n\n<p>From within the CTD Slack workspace:<\/p>\n\n\n\n<ul><li>In the Slack message space, click on the lightening bolt and type \u201cAsk Squibby\u201d. <\/li><li>Once the Slackbot form pops up, fill it out accordingly.<\/li><li>Submit!<\/li><\/ul>\n\n\n\n<p><strong>Submit a link EVEN if your code is not running correctly.<\/strong>\u00a0Your Squibby submission is the only way we know you have worked on your assignment.<\/p>\n\n\n\n<p>Reviewers will post comments via Github.<\/p>\n\n\n\n<p> <\/p>\n","protected":false},"excerpt":{"rendered":"<p>This page describes a few git commands. You will need to do these commands to submit weekly assignments and to complete the Ruby on Rails Back End course. If you are unfamiliar with git, you should complete the Introduction to Git course on Treehouse. Unfortunately, that class does not explain branching, forking, and other operations<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/854"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=854"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/854\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=854"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}