{"id":1544,"date":"2022-03-15T22:41:32","date_gmt":"2022-03-16T02:41:32","guid":{"rendered":"https:\/\/learn.codethedream.org\/?page_id=1544"},"modified":"2022-07-23T17:24:04","modified_gmt":"2022-07-23T21:24:04","slug":"ctd-node-express-class-lesson-12-jobs-api-part-1","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/ctd-node-express-class-lesson-12-jobs-api-part-1\/","title":{"rendered":"CTD Node\/Express Class Lesson 9: Jobs API Part 1"},"content":{"rendered":"\n<h2><strong>Lesson Materials<\/strong><\/h2>\n\n\n\n<p>In this lesson, you register users into a MongoDB database, storing the user name, email, and the hashed password.  We never store passwords in plain text.  Instead they are cryptographically hashed so that even if the database is compromised, the passwords are not.  You create, in addition to the user register route, a user logon route.  Each of these routes returns a JWT token, which is used to authenticate requests for the Jobs API.  You learn also about extending the mongoose schema with schema methods for password hashing, password compare, and JWT token creation.  You then set up the Jobs schema.  There is an association between jobs and users, in that each job entry belongs to a particular user, and only that user that owns the job entry can perform CRUD operations on it.  The final step in this lesson is actually to create such a job entry.  This is only an API, so all testing must be done using Postman.<\/p>\n\n\n\n<p>This lesson runs from 6:28:50 to 8:20:55 of <strong><a href=\"https:\/\/youtu.be\/qwfE7fSVaZM?t=23323\">this video<\/a><\/strong>.  <strong>Read the Coding Assignment Instructions before watching the video so you know how your assignment will differ from the video instructions.<\/strong><\/p>\n\n\n\n<p>As for previous lessons, you duplicate the work that the instructor shows. One annoying thing about this video is that the sound is out of sync with the video, lagging behind for about 5 seconds, but it isn&#8217;t a big problem.<\/p>\n\n\n\n<h2><strong>Assignments<\/strong><\/h2>\n\n\n\n<p><strong>Coding Assignment<\/strong><\/p>\n\n\n\n<p>There is a <strong>new repository<\/strong> for this lesson.  It is<a href=\"https:\/\/github.com\/Code-the-Dream-School\/06-jobs-api\"> <strong>here<\/strong><\/a><a rel=\"noreferrer noopener\" href=\"https:\/\/github.com\/jrmcgarvey\/06-jobs-api\" target=\"_blank\">.<\/a>  This is because you will eventually push the repository to Heroku.  The instructor has you do the work in the node-express-course\/06-jobs-api\/starter directory, and then copy that entire directory tree to a folder outside of node-express-course, and then do a git init.  That is complicated and messy.  So we have this new repository instead.  It is just a copy of the starter directory, but in its own repository.  So, fork this repository and then clone your fork.  When you clone, make sure you are not in the node-express course tree, so that you keep this repository separate.  You will do your work in this new 06-jobs-api repository directory.  If you get stuck, answers are in the  old repository, in the node-express-course\/06-jobs-api\/final directory, but please try to do your own work.  Before you start this lesson, you create the week9 git branch.  <strong>Do not do the copy of the starter directory that is described by the instructor.  Do not do the git init.<\/strong>  <\/p>\n\n\n\n<p><strong>Be sure you test each step with Postman, creating a Postman collection of tests just like the instructor is doing.<\/strong>  This Postman collection of tests is used not only to test the API as it runs on your machine, but also, in Lesson 10, to test the application as deployed to Heroku.<\/p>\n\n\n\n<p><strong>Mindset Assignment<\/strong><\/p>\n\n\n\n<p>Your mindset assignment for this week can be found here: <strong><a href=\"https:\/\/learn.codethedream.org\/mindset-curriculum-information-literacy\/\" target=\"_blank\" rel=\"noreferrer noopener\">Information Literacy<\/a><\/strong><\/p>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"submitting-your-work\"><strong>Submitting Your Work<\/strong><\/h2>\n\n\n\n<p>When you are done, do the following, use the same procedure as for previous lessons. You do a git add, git commit, and git push for the week9 branch, create your pull request on github, and put a link to your pull request in your assignment submission form below.<\/p>\n\n\n\n<p><strong>When you\u2019ve completed your Coding Assignment and Mindset Assignment submit ALL of your work using the&nbsp;<a href=\"http:\/\/tiny.cc\/squibby2\">Squibby 2.0 Assignment Submission Form<\/a><\/strong><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Lesson Materials In this lesson, you register users into a MongoDB database, storing the user name, email, and the hashed password. We never store passwords in plain text. Instead they are cryptographically hashed so that even if the database is compromised, the passwords are not. You create, in addition to the user register route, a<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1544"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=1544"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1544\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=1544"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}