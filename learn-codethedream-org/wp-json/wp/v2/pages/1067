{"id":1067,"date":"2021-05-15T15:01:44","date_gmt":"2021-05-15T19:01:44","guid":{"rendered":"https:\/\/learn.codethedream.org\/?page_id=1067"},"modified":"2021-12-09T18:33:29","modified_gmt":"2021-12-09T23:33:29","slug":"configuring-your-machine-for-rails-version-6-development","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/configuring-your-machine-for-rails-version-6-development\/","title":{"rendered":"Configuring Your Machine for Ruby and Rails Version 6 Development"},"content":{"rendered":"\n<p>You will have to do the following steps:<\/p>\n\n\n\n<ol><li>Install an editor.&nbsp; You can use <a href=\"https:\/\/code.visualstudio.com\/\" target=\"_blank\" rel=\"noreferrer noopener\">VSCode<\/a> or <a href=\"https:\/\/atom.io\/\" target=\"_blank\" rel=\"noreferrer noopener\">Atom<\/a>, and there are others as well.  These instructions assume that you already have an editor.<\/li><li>Install git if it is not already present. These instructions assume that you already have git.<\/li><li>Install your Ruby\/Rails environment, as described below.<\/li><\/ol>\n\n\n\n<p>In the next sections, there are specific descriptions on how to set up your machine.  Depending on your specific machine configuration, there may be differences in what you need to do.&nbsp; If you have trouble, ask via Slack on how to get around it.<\/p>\n\n\n\n<p>There are specific steps for installation on<\/p>\n\n\n\n<ul><li>Linux Ubuntu<\/li><li>Mac OSX<\/li><li>Windows 10 (you must have at least 8G of memory, and you must have administrator access)<\/li><\/ul>\n\n\n\n<p>If you do not have a machine of this description &#8212; for example, if your Windows machine only has 4G of memory &#8212; you will not be able to do local Rails development on your machine.  Put a message in Slack and we will consider alternatives.  <\/p>\n\n\n\n<h2>Linux Setup on Ubuntu<\/h2>\n\n\n\n<p>This information is for Ubuntu.&nbsp; The same steps can be done on other Linux distributions, but you have to use different installation tools.<\/p>\n\n\n\n<p>First, install rbenv.  At a terminal command line, enter the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt-get update\nsudo apt-get install rbenv\necho 'eval \"$(rbenv init -)\"' &gt;&gt; ~\/.bash_profile\n<\/code><\/pre>\n\n\n\n<p>Then close your terminal window and open a new one.  Then type these commands.  <\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https:\/\/github.com\/rbenv\/ruby-build.git \"$(rbenv root)\"\/plugins\/ruby-build\nrbenv install 3.0.1\nrbenv rehash\nrbenv global 3.0.1<\/code><\/pre>\n\n\n\n<p>Then verify your installation with the following command.  <\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\nruby --version<\/code><\/pre>\n\n\n\n<p>The last command should return ruby 3.0.1 with some other things following. If you do not see ruby 3.0.1 <strong>STOP<\/strong>. You do not have ruby or rbenv installed correctly. Go back and retry the previous steps, or put a message in the slack channel.<\/p>\n\n\n\n<p>Then enter the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>gem install bundler\ngem install rails -v 6.1.3\nrbenv rehash\nsudo apt-get install yarn<\/code><\/pre>\n\n\n\n<p>You also need to have node.js installed.  This is often done on Linux using nvm.  To install nvm and node, enter the following commands.  <\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>curl -o- https:\/\/raw.githubusercontent.com\/nvm-sh\/nvm\/v0.39.0\/install.sh | bash\nsource ~\/.profile \nnvm install node<\/code><\/pre>\n\n\n\n<p>If you get a command not found, close your terminal session, open a new one, and retry the command.  Verify your node installation using:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>node --version<\/code><\/pre>\n\n\n\n<p>Now, verify the Rails installation by creating a sample rails server.  Enter the following command:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>rails new sample1<\/code><\/pre>\n\n\n\n<p>This will run for quite some time, and will create a directory called sample1 with many files and folders.  Then type the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>cd sample1\nbin\/rails server<\/code><\/pre>\n\n\n\n<p>This will start the server.  You can now verify that the server is running by going this link: http:\/\/localhost:3000 . You should see a &#8220;Yay! You&#8217;re on Rails&#8221; screen, reporting a Rails version of 6.1.3 and a Ruby version of 3.0.1.  If you don&#8217;t get this far, put a message in the slack channel.  If you do get this far, go back to your command line and press Ctrl-C to stop the server.<\/p>\n\n\n\n<h2>Mac OSX Setup<\/h2>\n\n\n\n<p>If your Mac has the M1 chip, you should do your development in a Rosetta terminal session.<br>See <a href=\"https:\/\/osxdaily.com\/2020\/11\/18\/how-run-homebrew-x86-terminal-apple-silicon-mac\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/osxdaily.com\/2020\/11\/18\/how-run-homebrew-x86-terminal-apple-silicon-mac\/<\/a><\/p>\n\n\n\n<p>These steps assume that you have Homebrew installed. If you do not have Homebrew installed,<br>see this link for installation instructions: <a href=\"https:\/\/brew.sh\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/brew.sh\/<\/a> You can check to see whether<br>you have Homebrew installed by opening a terminal window and typing brew &#8211;version.<\/p>\n\n\n\n<p>First, install rbenv.  At a terminal command line, enter the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>brew install rbenv\necho 'eval \"$(rbenv init -)\"' &gt;&gt; ~\/.zshrc\n<\/code><\/pre>\n\n\n\n<p>Then close your terminal window and open a new one.  Then type these commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https:\/\/github.com\/rbenv\/ruby-build.git \"$(rbenv root)\"\/plugins\/ruby-build\nrbenv install 3.0.1\nrbenv rehash\nrbenv global 3.0.1<\/code><\/pre>\n\n\n\n<p>Then verify your installation with the following command.  <\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ruby --version<\/code><\/pre>\n\n\n\n<p>The last command should return ruby 3.0.1 with some other things following. If you do not see ruby 3.0.1 <strong>STOP<\/strong>. You do not have ruby or rbenv installed correctly. It will not work to run a different Ruby version.  Go back and retry the previous steps, or put a message in the slack channel.<\/p>\n\n\n\n<p>Then enter the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>gem install bundler\ngem install rails -v 6.1.3\nrbenv rehash\nbrew install yarn<\/code><\/pre>\n\n\n\n<p>You also need to have node.js installed.  You can install this as follows<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>brew install node<\/code><\/pre>\n\n\n\n<p>Verify your node installation using:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>node --version<\/code><\/pre>\n\n\n\n<p>Now, verify the Rails installation by creating a sample rails server.  Enter the following command:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>rails new sample1<\/code><\/pre>\n\n\n\n<p>This will run for quite some time, and will create a directory called sample1 with many files and folders.  Then type the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>cd sample1\nbin\/rails server<\/code><\/pre>\n\n\n\n<p>This will start the server.  You can now verify that the server is running by going to this link: <a href=\"http:\/\/localhost:3000\" target=\"_blank\" rel=\"noreferrer noopener\">http:\/\/localhost:3000<\/a> . You should see a &#8220;Yay! You&#8217;re on Rails&#8221; screen, reporting a Rails version of 6.1.3 and a Ruby version of 3.0.1.  If you don&#8217;t get this far, put a message in the slack channel.  If you do get this far, go back to your command line and press Ctrl-C to stop the server.<\/p>\n\n\n\n<h2>Windows 64Bit Setup.<\/h2>\n\n\n\n<p>We are going to set up a Linux virtual machine on Windows.&nbsp; The Linux virtual machine already has Ruby, rbenv, node.js, bundler, yarn, rails, and the other packages you need.&nbsp; This is a minimal virtual machine, so that it uses little memory.&nbsp; It has no GUI.<\/p>\n\n\n\n<p>These instructions assume that you already have git bash installed.  If not, install it from here: <a href=\"https:\/\/gitforwindows.org\/\">https:\/\/gitforwindows.org\/<\/a>  Note: When you install git bash, you must click the box to enable symbolic links.  If not, you will get an error saying that a symbolic link failed when you run yarn install.  If you get this error (you will not see it until lesson 6, when you have to run yarn install), re-install git for windows and click this box.<\/p>\n\n\n\n<ol><li>Install VirtualBox from <a rel=\"noreferrer noopener\" href=\"https:\/\/www.virtualbox.org\/\" target=\"_blank\">https:\/\/www.virtualbox.org\/<\/a> .&nbsp; These steps are tested with VirtualBox 6.1.12, but you can install the latest version.&nbsp; Take the defaults for the installation options.<\/li><li>Install Vagrant <a rel=\"noreferrer noopener\" href=\"https:\/\/www.vagrantup.com\/\" target=\"_blank\">https:\/\/www.vagrantup.com\/<\/a> .&nbsp; These steps are tested with Vagrant 2.2.9, but you can use the latest version.&nbsp; Be sure you install the 64 bit version.&nbsp; The installation is slow, so be patient.&nbsp; You will be given one or several security warnings, but proceed with the install.&nbsp; You will have to reboot your machine following the install.<\/li><li>Download <a rel=\"noreferrer noopener\" href=\"https:\/\/drive.google.com\/file\/d\/1DF9y5cuo98XpndUDadI1_bbKn9clsebK\/view?usp=sharing\" target=\"_blank\">rails-ctd_2_0.box<\/a> .&nbsp; You may get a security warning, but download it anyway. The download takes a long time.  Be sure you have a good internet connection when you do this.<\/li><li>Open Git Bash.&nbsp; You will have a shortcut on your desktop to open it. Type the following:<ol><li>cd ~<\/li><li>mkdir rails-ctd<\/li><\/ol><\/li><li>Move the rails-ctd_2_0.box file from your downloads folder into this new rails-ctd folder.&nbsp; In the File Explorer left hand pane, there is a person icon with your name.&nbsp; Open that up to find the rails-ctd folder.&nbsp; You will need to know how to find this folder when you use Atom or your preferred editor.<\/li><li>Within your Git Bash session, type:<\/li><\/ol>\n\n\n\n<pre class=\"wp-block-code\"><code>cd ~\/rails-ctd\nvagrant box add .\/rails-ctd_2_0.box  --name rails-ctd_2_0\nvagrant init rails-ctd_2_0<\/code><\/pre>\n\n\n\n<p>This completes the Windows install and setup.<\/p>\n\n\n\n<h2>Windows: Using the rails-ctd Virtual Box and Git for Windows<\/h2>\n\n\n\n<p>Each time you use the development environment you have just set up, you do these steps.<\/p>\n\n\n\n<ol><li>Start&nbsp; Git Bash.  Note: You MUST start it using Run as Administrator.  One way to do this is to right click on the Git Bash icon and select Run as Administrator.  This is necessary because Rails 6 uses a package called yarn which requires symlinks.  Symlinks don&#8217;t work under vagrant unless you run as administrator. <\/li><li>cd ~\/rails-ctd<\/li><li>vagrant up<ol><li>Notes: this will take a little while.&nbsp; You can leave the virtual box running, even when you sleep the box, to save time.&nbsp;&nbsp;<\/li><li>You may see several messages, including one about the guest additions version not matching.&nbsp; You can ignore that message.<\/li><\/ol><\/li><li>vagrant ssh<\/li><\/ol>\n\n\n\n<p>This starts the environment and takes you to a linux command shell.&nbsp; Type rails &#8211;version to make sure it is working.&nbsp; If you don\u2019t get this far, ask for help on Slack.<\/p>\n\n\n\n<p>There are three parts to the Windows development environment.<\/p>\n\n\n\n<ul><li>The vagrant ssh linux environment.&nbsp; This is where you will do all of your rails, ruby, bundle, irb, git and gem commands.<\/li><li>Git Bash.&nbsp; This is where you will do all your vagrant commands.<\/li><li>Your editor.<\/li><li>You do not use the Windows command prompt.<\/li><\/ul>\n\n\n\n<p>Be sure you are in the right command environment when you do command line operations.&nbsp; You can have multiple Git Bash windows open concurrently.&nbsp; You can also have multiple vagrant ssh windows open for one vagrant virtual box.&nbsp; You exit vagrant ssh by typing exit.&nbsp; You exit Git Bash the same way.<\/p>\n\n\n\n<p>You do git commands from the vagrant ssh linux environment.&nbsp; You should configure this environment as follows: <\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>git config --global core.eol lf\ngit config --global core.autocrlf input<\/code><\/pre>\n\n\n\n<p>You must be in the Git Bash ~\/rails-ctd directory to do vagrant commands.<\/p>\n\n\n\n<p>To stop the virtual box, you would type: vagrant halt  &#8212; but don&#8217;t do that just yet.<\/p>\n\n\n\n<p>To verify that your environment is working correctly, we are going to create a sample rails application.&nbsp; On Windows, open the vagrant ssh environment.&nbsp; Then type&nbsp;<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>rails new sample1<\/code><\/pre>\n\n\n\n<p>This will run for quite some time, and will create a directory called sample1 with many files and folders.  Then type the following commands:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>cd sample1\nbin\/rails server -b 0.0.0.0<\/code><\/pre>\n\n\n\n<p>This will start the server.  Please note that you must include the -b 0.0.0.0 when you are running on vagrant.  You can now verify that the server is running by going to this link: <a rel=\"noreferrer noopener\" href=\"http:\/\/localhost:3000\" target=\"_blank\">http:\/\/localhost:3000<\/a> .You should see a &#8220;Yay! You&#8217;re on Rails&#8221; screen, reporting a Rails version of 6.1.3 and a Ruby version of 3.0.1.  If you don&#8217;t get this far, put a message in the slack channel.  If you do get this far, go back to your command line and press Ctrl-C to stop the server.<br><\/p>\n\n\n\n<p>A note about using vagrant: One big disadvantage is that if you make changes to your Rails code, you must stop and restart the rails server for the changes to take effect.  This is because you are changing code in the Windows session but running it in the Linux session.  Remember this!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>You will have to do the following steps: Install an editor.&nbsp; You can use VSCode or Atom, and there are others as well. These instructions assume that you already have an editor. Install git if it is not already present. These instructions assume that you already have git. Install your Ruby\/Rails environment, as described below.<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1067"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=1067"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/1067\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=1067"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}