{"id":348,"date":"2020-06-11T18:21:13","date_gmt":"2020-06-11T22:21:13","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=348"},"modified":"2022-01-25T18:11:29","modified_gmt":"2022-01-25T23:11:29","slug":"midnight-train-git-workflow","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/midnight-train-git-workflow\/","title":{"rendered":"CTD Git Workflow: Sharing Project Work When Each Developer has a Fork of the Code"},"content":{"rendered":"\n<p>For many CTD projects, we will use a specific Git workflow.   Each developer will have a fork of the code to which they have write access.  Write access to the master repository is limited. This workflow is similar to ones used by many companies. The flow is triangular: <\/p>\n\n\n\n<ol><li>You receive changes to your repository from the CTD master repository for the project. Some older repositories use &#8220;master&#8221; instead of &#8220;main&#8221; as the name for the primary branch.  Some teams will also create a development branch.<\/li><li>You create changes in a feature branch in your repository and push it to your Github fork of the master CTD repository for the project.<\/li><li>You do a pull request.  When approved this will merge your changes from your feature branch into the CTD master repository.<\/li><\/ol>\n\n\n\n<p>You may only have read only access to the CTD master repository for the project.  Your changes will be merged by the committers for the project.<\/p>\n\n\n\n<h2>Setting up for this Git Workflow<\/h2>\n\n\n\n<ol><li>Fork the CTD master repository for the project into your own github account.<\/li><li>Clone the fork onto your workstation so that you can develop project features.<\/li><li>Add an additional github remote repository to your workspace for the project:<code> git remote add upstream &lt;git url of the master repository><\/code><\/li><li>Do a <code>git pull upstream main<\/code> to synchronize with the master repository.<\/li><\/ol>\n\n\n\n<h2>Working on a Feature<\/h2>\n\n\n\n<ol><li>Do not make edits directly to the master branch.  Instead, create a feature branch using <code>git checkout -b &lt;featurename><\/code>  Note: If you forget, there are ways to save your changes and  to get the master branch back the way it was.  For example, if you have not committed changes, you can use git stash, then create the feature branch, then do git stash apply.<\/li><li>Work on the feature, periodically committing to your feature branch.<\/li><li>Periodically push your commits to github, using <code>git push origin &lt;featurename><\/code><\/li><li>When the feature is complete, tested, and ready, commit and push it once more.<\/li><li>Then, checkout the master branch.  You need to get any changes that have been made by your coworkers on the project.<\/li><li>Do a <code>git pull upstream main<\/code> to get those latest changes.<\/li><li>Then, <code>git checkout &lt;featurename> <\/code>to switch back to your feature branch.<\/li><li>Do <code>git merge main<\/code> .  This will bring those changes into your feature branch. <\/li><li>Sometimes you will get merge conflicts.  This happens when you and your coworkers are both making changes to the same files.  You need to resolve the merge conflicts by editing each file with merge conflicts.  The merge conflicts will be marked, and you have to select whether your lines, your coworker&#8217;s lines, or both are to be included.  You also need to remove the merge conflict markers.<\/li><li>If you fixed merge conflicts in any files, add and commit them to complete the merge.<\/li><li>Test one more time to make sure the merge didn&#8217;t cause a break and that your feature still works.<\/li><li>Push your feature branch to github one more time.<\/li><li>Login to github and do a pull request for your feature branch.  Include git IDs for project committers in the comment for your pull request so that they can review it.<\/li><li>If the review determines that changes are needed, make them to the same feature branch.   Then repeat the process of pulling the upstream main into the local main branch, merging the main branch, and resolving merge conflicts, and push your changes once more, marking the requested changes as resolved.  Be sure to test as you make changes!<\/li><li>Repeat this process until your feature branch has been merged.<\/li><li>Checkout your main branch on your workstation. <\/li><li>Do a <code>git pull upstream main<\/code> to pull down your changes into your main branch.  You can now delete your feature branch using <code>git branch -d &lt;featurename><\/code> .<\/li><li>Do a <code>git push origin main<\/code> to push your changes to your github fork main branch.<\/li><li>Time for a new feature branch!<\/li><\/ol>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>For many CTD projects, we will use a specific Git workflow. Each developer will have a fork of the code to which they have write access. Write access to the master repository is limited. This workflow is similar to ones used by many companies. The flow is triangular: You receive changes to your repository from<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/348"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=348"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/348\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=348"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}