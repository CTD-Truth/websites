{"id":777,"date":"2020-12-26T17:46:21","date_gmt":"2020-12-26T22:46:21","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=777"},"modified":"2021-01-17T19:30:45","modified_gmt":"2021-01-18T00:30:45","slug":"rails-basic-skills-exception-handling","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/rails-basic-skills-exception-handling\/","title":{"rendered":"Rails Basic Skills: Exception Handling"},"content":{"rendered":"\n<p>Stop the server. Now we want to edit customers_controller.rb again.&nbsp; Take out the byebug line.&nbsp; Add this line near the top of the file, right after the \u201cclass\u201d line, but before the \u201cbefore_action\u201d line:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>rescue_from ActiveRecord::RecordNotFound, with: :catch_not_found<\/code><\/pre>\n\n\n\n<p>And, add this method to the bottom of the file, right before the end that ends the class:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>def catch_not_found(e)\n      Rails.logger.debug(\"We had a not found exception.\")\n      flash.alert = e.to_s\n      redirect_to customers_path\nend\n<\/code><\/pre>\n\n\n\n<h2>Explaining This Code<\/h2>\n\n\n\n<p>The rescue_from statement says that if an exception of the specified type occurs, call the catch_not_found method.<\/p>\n\n\n\n<p>The Rails.logger.debug statement writes an entry to the Rails log.&nbsp; You will see it in the console, and it is also written to the log\/development.log file.<\/p>\n\n\n\n<p>The flash.alert statement takes the message from the exception and stores it in the flash object so that it can be displayed to the user.<\/p>\n\n\n\n<p>The redirect_to statement puts up the index page again, so that the user does not see that other error page.<\/p>\n\n\n\n<h2>Trying the Code Again<\/h2>\n\n\n\n<p>Now save the controller file, restart the server, and go to the \/customers\/567 URL again.&nbsp; You will see that the index page is shown, instead of the error.&nbsp; You will see that the \u201cwe had a not found exception\u201d line is in the server log when you look at the console.&nbsp; BUT the user does not see the error message.&nbsp; We need to do more to make that work.<\/p>\n\n\n\n<h2>Creating a Special Layout<\/h2>\n\n\n\n<p>With your editor, duplicate the app\/views\/layouts\/application.html.erb file, and give the new duplicate file the name customer_layout.html.erb.&nbsp; This new file should also be in the layouts directory.&nbsp; Then edit the new file and add these lines, just below the &lt;body&gt; tag:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;% if !flash&#91;:alert].nil? %>\n    &lt;p class=\"my_alert\">&lt;%= flash&#91;:alert] %>&lt;\/p>\n&lt;% end %>\n<\/code><\/pre>\n\n\n\n<p>Then add this line to the customer_controller.rb file, right after the before_action line:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>layout 'customer_layout'<\/code><\/pre>\n\n\n\n<h2>CSS Files for Rails are in the app\/assets\/stylesheets Folder<\/h2>\n\n\n\n<p>Open app\/assets\/stylesheets\/customers.scss .&nbsp; The stylesheets directory stores files with your Rails stylesheet information.&nbsp; customers.scss stores style information only for the customers controller.&nbsp; You will see that is currently empty except for comments.&nbsp; Add this CSS style rule:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>.my_alert {\n  color: red;\n}<\/code><\/pre>\n\n\n\n<p>This corresponds to the my_alert class that was used in the customer_layout.html.erb file.&nbsp; We want alerts to show in red. (You can try adding other styling if you want this application to look cool, but let\u2019s make this work first.)<\/p>\n\n\n\n<h2>Now Try \/customers\/567 Again<\/h2>\n\n\n\n<p>You will see that you are once again directed to the index page, but at the top, in red, there will be an error message:<\/p>\n\n\n\n<p>Couldn\u2019t find Customer with \u2018id\u2019=567<\/p>\n\n\n\n<p>This is a much more user friendly message than before.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Stop the server. Now we want to edit customers_controller.rb again.&nbsp; Take out the byebug line.&nbsp; Add this line near the top of the file, right after the \u201cclass\u201d line, but before the \u201cbefore_action\u201d line: And, add this method to the bottom of the file, right before the end that ends the class: Explaining This Code<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/777"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=777"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/777\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=777"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}