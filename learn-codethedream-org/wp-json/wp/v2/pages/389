{"id":389,"date":"2020-06-29T14:38:15","date_gmt":"2020-06-29T18:38:15","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=389"},"modified":"2020-07-18T18:02:08","modified_gmt":"2020-07-18T22:02:08","slug":"midnight-train-project-2","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/midnight-train-project-2\/","title":{"rendered":"Midnight Train Project 2"},"content":{"rendered":"\n<p>We will build an application for the Coder Alliance for Racial Equity (CARE) which is currently comprised of only CTD people.  The application is to provide documentation and resources on racial history, equity, strategy, etc.<\/p>\n\n\n\n<h2>High Level Requirements<\/h2>\n\n\n\n<p>(1) administrator logon<br>(2) a timeline of historical events, using a javascript timeline control.<br>(3) Ability for the administrators to add new events to the timeline.&nbsp; In addition to the date, these might include pictures, text summaries, and links.<br>(4) a display of resources by category.&nbsp; A resource would be a link and a text summary, along with searchable keywords.<br>(5) Ability for the administrators to add new categories and resources<\/p>\n\n\n\n<p>There would be no smartphone app, but we would (as a run-at) attempt to make the app viewable in smartphone browsers.<\/p>\n\n\n\n<p>Although administrators would need to log in, anyone would be able to view the application.  Depending upon time constraints, we might add:<br>(6) A moderated blog.<\/p>\n\n\n\n<h2>User and Administrator Views<\/h2>\n\n\n\n<p>We want different views for users (who may not be logged in and do not have the administrator role) and administrators (who are logged in and have the administrator role).<\/p>\n\n\n\n<p>Right now, we have CRUD operations on timeline events.  All of the views associated with the events_controller should be visible only to the administrator.  Moreover, they should have access control so that they can&#8217;t be performed except by an administrator.<\/p>\n\n\n\n<p>Right now, we have CRUD operations on resources.  All of the existing views should only be seen by an administrator, and should have access controls so that they are only accessible by an administrator.  However, some additional views should be added for users: an user_index method and view for resources, which would show the list of resources.  In this list, for each resource, we would have the title, and if a link is available for the resource, the title would be shown as a clickable link that would take you to the target in a separate tab.  Also, it would show the first 20 characters of the description with a &#8230; following, and then a show button.  The show button should take you to the user_show view, which would have the complete resource shown, including all of the description. Again the title would be a clickable link.  The link is an optional attribute, and if it is not present, the title would just be shown as non-clickable text.  There would be a back button, but no edit button.<\/p>\n\n\n\n<p>We need a new controller, the timelines controller.  It would have one method which would show a timeline.  The timeline_id of the timeline to show would be passed as a parameter.<br><br>The navbar should have the following links: on the left, home, followed by resources.  If the logged on user has a role of &#8220;administrator&#8221; it should also have an &#8220;administration&#8221;  pulldown with an &#8220;edit resources&#8221; link, which would take you to the current resources index page, and an &#8220;edit events&#8221; link which would take you to the events index page, followed by a&#8221;show sample&#8221; link which would take you to the sample timeline. On the right, the navbar should have a logon link (if no one is logged in) or a log off link if a user is logged in.  The home link should send you to the show method of the timeline controller, passing as a parameter &#8220;CARE-alliance&#8221;.  The show sample link would connect to the same controller, passing as a parameter &#8220;Sample&#8221;.<\/p>\n\n\n\n<h2>When to Show Administrator Links and Views<\/h2>\n\n\n\n<p>There are some devise helper methods, which are user_signed_in? and current_user.  If the user is signed in, you can check whether current_user.role == &#8220;administrator&#8221;.  Only if a user is signed in will current_user be defined, and only if the current_user.role is &#8220;administrator&#8221; should the administrator links be shown.<\/p>\n\n\n\n<h2>How to Protect Controller Methods that are Only for Administrators<\/h2>\n\n\n\n<p>Suppose someone enters a route that goes to the events controller.  This entire controller is for administrators only, so right at the top there should be an invocation of another Devise helper method: <\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">before_action :authenticate_user!<\/pre>\n\n\n\n<p>This will ensure that the user must be logged in to do any of the methods of this controller.  However this is only the first step.  We also have to check to see if the logged in user is an administrator.  So we will have a second method:<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">before_action :user_is_administrator?<\/pre>\n\n\n\n<p>This will be a private method that will check if the current user has the administrator role.  If the user does not have the administrator role,  the user_is_administrator method should set the flash.alert to &#8220;You are not authorized to perform that operation.&#8221; and should redirect to the home page.<\/p>\n\n\n\n<p>The resources controller should also have these checks, except they should say:<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">before_action :authenticate_user!, except: [:user_index, :user_show]\nbefore_action :user_is_administrator?, except: [:user_index, :user_show]<\/pre>\n\n\n\n<p>This is because users are permitted to do user_index and user_show, without being logged in as an administrator.<\/p>\n\n\n\n<p>Similarly, the  timeline controller should do this access control, but in this case it should only be done if the timeline parameter that is passed to the controller is not &#8220;CARE-alliance&#8221;.  This would prevent the non-administrative user from seeing the sample timeline.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>We will build an application for the Coder Alliance for Racial Equity (CARE) which is currently comprised of only CTD people. The application is to provide documentation and resources on racial history, equity, strategy, etc. High Level Requirements (1) administrator logon(2) a timeline of historical events, using a javascript timeline control.(3) Ability for the administrators<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/389"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=389"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/389\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=389"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}