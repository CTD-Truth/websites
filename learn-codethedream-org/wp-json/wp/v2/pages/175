{"id":175,"date":"2020-04-15T22:38:29","date_gmt":"2020-04-16T02:38:29","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=175"},"modified":"2021-01-17T17:19:24","modified_gmt":"2021-01-17T22:19:24","slug":"styling-your-rails-application-with-bootstrap","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/styling-your-rails-application-with-bootstrap\/","title":{"rendered":"Styling Your Rails Application With Bootstrap"},"content":{"rendered":"\n<p>Our Rails applications to this point have had a very basic look.  But it is possible to style them to make them more usable and attractive, using CSS and JavaScript.  For this lesson, we will learn about the Bootstrap library of CSS styles and utilities.  Bootstrap is an efficient way to style your application so that it has a consistent and responsive appearance, regardless of the browser or device that is used to view it.<\/p>\n\n\n\n<p>Application aesthetics are important for your career success, so learning styling skills will be valuable to you.<\/p>\n\n\n\n<p>To learn bootstrap, we will use this Treehouse course: <a rel=\"noreferrer noopener\" aria-label=\"Bootstrap 4 Ba (opens in a new tab)\" href=\"https:\/\/teamtreehouse.com\/library\/bootstrap-4-basics-2\" target=\"_blank\">Bootstrap 4 Ba<\/a><a href=\"https:\/\/teamtreehouse.com\/library\/bootstrap-4-basics-2\">sics<\/a>.  You do not need to do this in your own development environment.  When you bring up the video, it will allow you to launch a Treehouse workspace where you can try the various steps the instructor does.  The important ideais that you can go to the <a rel=\"noreferrer noopener\" aria-label=\"Bootstrap s (opens in a new tab)\" href=\"https:\/\/getbootstrap.com\/docs\/4.2\/getting-started\/introduction\/\" target=\"_blank\">Bootstrap s<\/a><a href=\"https:\/\/getbootstrap.com\/docs\/4.2\/getting-started\/introduction\/\">ite<\/a>, copying the examples you need and then customizing them to suit your purpose.<\/p>\n\n\n\n<p>Note: Inclusion of bootstrap in Rails is significantly different for Rails 6.  Rails 6 is beyond the scope of this course.<\/p>\n\n\n\n<h1>Setup<\/h1>\n\n\n\n<p>gem install bundler<br>bundle install<br>bin\/rails db:migrate<\/p>\n\n\n\n<p>Then start the server and have a look at the application. Create a shark, just giving it the name of Great White and under Facts just put: Scary.<\/p>\n\n\n\n<p>As you can see, the application has not been styled at all. We will use Bootstrap to style it.<\/p>\n\n\n\n<p>Before you make any changes, create a git branch called bootstrap, and make your changes inside that.<\/p>\n\n\n\n<h1><a href=\"https:\/\/github.com\/Code-the-Dream-School\/Backend-rails-bootstrap#adding-bootstrap\"><\/a>Adding Bootstrap<\/h1>\n\n\n\n<p>First edit the Gemfile . Add these lines.<\/p>\n\n\n\n<p>gem &#8216;jquery-rails&#8217;<br>gem &#8216;bootstrap&#8217;<\/p>\n\n\n\n<p>They should go in the main section, above the line<\/p>\n\n\n\n<p>&#8220;group :development, :test do&#8221;<\/p>\n\n\n\n<p>Then do<\/p>\n\n\n\n<p>bundle install<\/p>\n\n\n\n<p>To load these gems.<\/p>\n\n\n\n<p>Next, edit app\/assets\/javascripts\/application.js<\/p>\n\n\n\n<p>add these lines to the bottom:<\/p>\n\n\n\n<p>\/\/= require jquery3<br>\/\/= require popper<br>\/\/= require bootstrap<\/p>\n\n\n\n<p>Next, rename app\/assets\/stylesheets\/application.css to application.css.scss. Take the = sign out of the line that says require font-awesome, as we are going to import it. Then add all the lines in application.cssaddition to application.css.scss. This includes some @import statements, which are the important ones, plus customization of the bootstrap appearance with new styles.<\/p>\n\n\n\n<p>Then, make sure the app still works. It still hasn&#8217;t been styled. The bootstrap css and javascript libraries are present, but they aren&#8217;t yet being used. The css that has been applied makes some of the buttons invisible, unfortunately, but we&#8217;ll fix that.<\/p>\n\n\n\n<h1><a href=\"https:\/\/github.com\/Code-the-Dream-School\/Backend-rails-bootstrap#styling-with-bootstrap-classes\"><\/a>Styling with bootstrap classes<\/h1>\n\n\n\n<p>Do this command to create a controller:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>bin\/rails generate controller home index<\/code><\/pre>\n\n\n\n<p>Edit the config\/routes.rb file. Change:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>root 'sharks#index'<\/code><\/pre>\n\n\n\n<p>to<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>root 'home#index'<\/code><\/pre>\n\n\n\n<p>Next, edit app\/views\/layouts\/application.html.erb to match this:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>\r\n&lt;html>\r\n  &lt;head>\r\n    &lt;%= csrf_meta_tags %>\r\n    &lt;%= csp_meta_tag %>\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    &lt;title>&lt;%= content_for?(:title) ? yield(:title) : \"About Sharks\" %>&lt;\/title>\r\n    &lt;meta name=\"description\" content=\"&lt;%= content_for?(:description) ? yield(:description) : \"About Sharks\" %>\">\r\n    &lt;%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>\r\n  &lt;\/head>\r\n  &lt;body>\r\n    &lt;header>\r\n      &lt;%= render 'layouts\/navigation' %>\r\n    &lt;\/header>\r\n    &lt;main role=\"main\">\r\n    &lt;%= content_for?(:content) ? yield(:content) : yield %>\r\n    &lt;\/main>\r\n  &lt;\/body>\r\n&lt;\/html><\/code><\/pre>\n\n\n\n<p>Explanation: The viewport meta tag is recommended by bootstrap for behaviors responsive to the browser screen size. The title is set up to be rendered flexibly, as is the meta tag for site description. The header section is set up to render a navigation bar. This will be in a partial that we haven&#8217;t yet created. The yield statement in the main section is set up to give logic to the view that will be rendered. If the content block is set, the application will yield the associated layout (yield with parameter), but if not, the yield without parameters will give the default view of the home controller.<\/p>\n\n\n\n<p>Then create the navigation bar partial as app\/views\/layouts\/_navigation.html.erb . It should read as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;nav class=\"navbar navbar-dark navbar-static-top navbar-expand-md\">\r\n  &lt;div class=\"container\">\r\n    &lt;button type=\"button\" class=\"navbar-toggler collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\"> &lt;span class=\"sr-only\">Toggle navigation&lt;\/span>\r\n    &lt;\/button> &lt;%= link_to \"Everything Sharks\", root_path, class: 'navbar-brand' %>\r\n    &lt;div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n    &lt;ul class=\"nav navbar-nav mr-auto\">\r\n      &lt;li class='nav-item'>&lt;%= link_to 'Home', home_index_path, class: 'nav-link' %>&lt;\/li>\r\n      &lt;li class='nav-item'>&lt;%= link_to 'Sharks', sharks_path, class: 'nav-link' %>&lt;\/li>\r\n    &lt;\/ul>\r\n    &lt;\/div>\r\n  &lt;\/div>\r\n&lt;\/nav><\/code><\/pre>\n\n\n\n<p>This is a control borrowed directly from the bootstrap navbar examples, but with link_to paths defined, instead of using static hrefs.<\/p>\n\n\n\n<p>Now we define a layout that will be rendered when the yield(:content) call is made. This is to be created in in app\/views\/layouts\/sharks.html.erb . It should read as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;% content_for :content do %>\r\n  &lt;div class=\"jumbotron text-center\">\r\n    &lt;h1>Shark Info&lt;\/h1>\r\n  &lt;\/div>\r\n  &lt;div class=\"container\">\r\n    &lt;div class=\"row\">\r\n      &lt;div class=\"col-lg-6\">\r\n        &lt;p>&lt;%= yield %>&lt;\/p>\r\n      &lt;\/div>\r\n      &lt;div class=\"col-lg-6\">\r\n        &lt;p>\r\n          &lt;div class=\"caption\">You can always count on some sharks to be friendly and welcoming!&lt;\/div>\r\n          &lt;img src=\"https:\/\/assets.digitalocean.com\/articles\/docker_node_image\/sammy.png\" alt=\"Sammy the Shark\">\r\n        &lt;\/p>\r\n      &lt;\/div>\r\n    &lt;\/div>\r\n  &lt;\/div>\r\n&lt;% end %>\r\n&lt;%= render template: \"layouts\/application\" %><\/code><\/pre>\n\n\n\n<p>Next, we have to create the view for the application home page, in app\/views\/home\/index.html . That file should read as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div class=\"jumbotron\">\r\n  &lt;div class=\"container\">\r\n    &lt;h1>Want to Learn About Sharks?&lt;\/h1>\r\n    &lt;p>Are you ready to learn about sharks?&lt;\/p>\r\n    &lt;br>\r\n    &lt;p>\r\n      &lt;%= button_to 'Get Shark Info', sharks_path, :method => :get,  :class => \"btn btn-primary btn-lg\"%>\r\n    &lt;\/p>\r\n  &lt;\/div>\r\n&lt;\/div>\r\n&lt;div class=\"container\">\r\n  &lt;div class=\"row\">\r\n    &lt;div class=\"col-lg-6\">\r\n      &lt;h3>Not all sharks are alike&lt;\/h3>\r\n      &lt;p>Though some are dangerous, sharks generally do not attack humans. Out of the 500 species known to researchers, only 30 have been known to attack humans.\r\n      &lt;\/p>\r\n    &lt;\/div>\r\n    &lt;div class=\"col-lg-6\">\r\n      &lt;h3>Sharks are ancient&lt;\/h3>\r\n      &lt;p>There is evidence to suggest that sharks lived up to 400 million years ago.\r\n      &lt;\/p>\r\n     &lt;\/div>\r\n  &lt;\/div>\r\n&lt;\/div><\/code><\/pre>\n\n\n\n<p>Finally, we have to style the buttons in the other views.<\/p>\n\n\n\n<p>In app\/views\/sharks\/index.html.erb, replace<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;%= link_to 'New Shark', new_shark_path %><\/code><\/pre>\n\n\n\n<p>with<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;%= link_to 'New Shark', new_shark_path, :class => \"btn btn-primary btn-sm\" %> &lt;%= link_to 'Home', home_index_path, :class => \"btn btn-primary btn-sm\" %>\r<\/code><\/pre>\n\n\n\n<p>which styles the buttons and adds a home link. Similarly, style the button at the bottom of the app\/views\/sharks\/new.html.erb, so that it looks like:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;%= link_to 'Back', sharks_path, :class => \"btn btn-primary btn-sm\" %><\/code><\/pre>\n\n\n\n<p>Then style the buttons in the show view, app\/views\/sharks\/show.html.erb, so that they look like:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;%= link_to 'Edit', edit_shark_path(@shark), :class => \"btn btn-primary btn-sm\" %> &lt;%= link_to 'Back', sharks_path, :class => \"btn btn-primary btn-sm\" %>\r<\/code><\/pre>\n\n\n\n<p>That finishes the bootstrap styling. The application is now ready to test. Start your server as usual and have a look with your browser. How do you think it looks? Feel free to experiment with adjustments to the styling.<\/p>\n\n\n\n<p>Once it&#8217;s all working, don&#8217;t forget to push your work to github. Then issue a pull request.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Our Rails applications to this point have had a very basic look. But it is possible to style them to make them more usable and attractive, using CSS and JavaScript. For this lesson, we will learn about the Bootstrap library of CSS styles and utilities. Bootstrap is an efficient way to style your application so<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/175"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=175"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/175\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=175"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}