{"id":772,"date":"2020-12-06T22:28:04","date_gmt":"2020-12-07T03:28:04","guid":{"rendered":"https:\/\/learnctd.wpengine.com\/?page_id=772"},"modified":"2020-12-06T22:34:58","modified_gmt":"2020-12-07T03:34:58","slug":"rspec_help","status":"publish","type":"page","link":"https:\/\/learn.codethedream.org\/rspec_help\/","title":{"rendered":"Some Help for FactoryBot and Rspec"},"content":{"rendered":"\n<p>Several people have found the rspec homework pretty hard.  This page explains some things that may help.<\/p>\n\n\n\n<h2>Notes on FactoryBot<\/h2>\n\n\n\n<p>When you run tests, there is a temporary database set up just for the time that the test is running. You can use FactoryBot to create test entries.  FactoryBot.create creates and saves a new customer in this test database \u2014 so the new object will be saved at Customer.last. FactoryBot.attributes_for returns attributes that match your object, but it doesn\u2019t save a new object in the test database. See more on FactoryBot\u2019s methods here:\u00a0<a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https:\/\/github.com\/thoughtbot\/factory_bot\/blob\/master\/GETTING_STARTED.md#build-strategies\">https:\/\/github.com\/thoughtbot\/factory_bot\/blob\/master\/GETTING_STARTED.md#build-strategies<\/a>\u201d<\/p>\n\n\n\n<p>In the exercise, you are asked to create factories for order and customer objects.  Now, for customer, that isn&#8217;t too hard.  But each order belongs to a customer.   So the factory for order has to create the customer object too.  This is done as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>FactoryBot.define do\n  factory :order do\n    product_name { \"MyString\" }\n    product_count { 1 }\n    association :customer\n  end\nend<\/code><\/pre>\n\n\n\n<p>The key point here is the use of association.  Now, we can do order = FactoryBot.create(:order) and it will create an order for us and store it in the database.  Unfortunately, that doesn&#8217;t quite solve all our problems.  For the post method, we need to get the attributes for an order object.  If we do attributes = FactoryBot.attributes_for(:order) it will not store anything in the database.  It will also not create any attributes corresponding to the customer.  So we have to create the customer object explicitly, and add its id to the list of attributes, as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>customer = FactoryBot.create(:customer)\norder_attributes = FactoryBot.attributes_for(:order, customer_id: customer.id)<\/code><\/pre>\n\n\n\n<p>Now we can call the post method and create the order entry:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>    expect { post orders_path, params: {order: order_attributes}\n    }.to change(Order, :count)\n      expect(response).to redirect_to order_path(id: Order.last.id)<\/code><\/pre>\n\n\n\n<h2>RSpec Detail: The Put Method<\/h2>\n\n\n\n<p>If you do bin\/rails routes, you will get output that show your current routes, and that shows you what you need to test in your request tests.  In, particular, you will have one like this:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code> PUT    \/orders\/:id(.:format)                       orders#update<\/code><\/pre>\n\n\n\n<p>You need to test whether a put method within rspec will really update the corresponding order entry, using the update method of the orders controller.  Well, since we are updating an entry, we better create it first:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>order = FactoryBot.create(:order)<\/code><\/pre>\n\n\n\n<p>Now, we are going to update this with a valid change (you also need to check whether invalid changes are handled correctly.  The change we are making will set the product_count to 17.  This can be done as follows:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>put order_path(id: order.id), params: {order: {product_count: 17}}<\/code><\/pre>\n\n\n\n<p>Note that you must pass the order.id to the order_path to get to the right order.  Note also that the params are a hash within a hash.  Now we need to check two things.  FIrst, did the product_count actually get changed to 17 in the database?  Second, when you do an update, the method is supposed to redirect to the show path for that entry; does it?  For the first, we have to do an order.reload so that the copy of the order in memory matches what is in the database.  For the second, we have the response object, which, in rspec request testing, is always set to the result of the operation, i.e. what it returns.  So:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>order.reload\nexpect(order.product_count).to eq(17)\nexpect(response).to redirect_to order_path(id: order.id)<\/code><\/pre>\n\n\n\n<p>I hope this gives enough help that you can complete the exercise.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Several people have found the rspec homework pretty hard. This page explains some things that may help. Notes on FactoryBot When you run tests, there is a temporary database set up just for the time that the test is running. You can use FactoryBot to create test entries. FactoryBot.create creates and saves a new customer<\/p>\n","protected":false},"author":5,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":"","_vp_format_video_url":"","_vp_image_focal_point":[]},"featured_image_src":null,"featured_image_src_square":null,"_links":{"self":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/772"}],"collection":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/users\/5"}],"replies":[{"embeddable":true,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/comments?post=772"}],"version-history":[{"count":0,"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/pages\/772\/revisions"}],"wp:attachment":[{"href":"https:\/\/learn.codethedream.org\/wp-json\/wp\/v2\/media?parent=772"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}